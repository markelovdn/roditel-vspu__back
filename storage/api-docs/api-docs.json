{
    "openapi": "3.0.0",
    "info": {
        "title": "Example for response examples value",
        "version": "1.0"
    },
    "paths": {
        "/api/": {},
        "/api/register": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Registration new user",
                "operationId": "b5c21cd46c71c3bac1d8941aa9c6afc3",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    },
                    {
                        "name": "patronymic",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    },
                    {
                        "name": "email",
                        "in": "path",
                        "description": "string, maxLength=255, uniqueItems=true",
                        "required": true
                    },
                    {
                        "name": "phone",
                        "in": "path",
                        "description": "string, maxLength=255, uniqueItems=true",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    },
                    {
                        "name": "role_code",
                        "in": "path",
                        "description": "consultant or parented",
                        "required": true
                    },
                    {
                        "name": "specialization_id",
                        "in": "path",
                        "description": "integer, only for consultant role",
                        "required": true
                    },
                    {
                        "name": "profession_id",
                        "in": "path",
                        "description": "integer, only for consultant role",
                        "required": true
                    },
                    {
                        "name": "region_id",
                        "in": "path",
                        "description": "integer, only for parented role",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "second_name",
                                    "patronymic",
                                    "email",
                                    "phone",
                                    "password",
                                    "role_code",
                                    "specialization_id",
                                    "profession_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "second_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "patronymic": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "uniqueItems": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "uniqueItems": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 6
                                    },
                                    "role_code": {
                                        "type": "string"
                                    },
                                    "specialization_id": {
                                        "type": "integer"
                                    },
                                    "profession_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "schema": "User response",
                                            "title": "Sample schema users list",
                                            "properties": {
                                                "userData": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "secondName": {
                                                            "type": "string"
                                                        },
                                                        "patronymic": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "role": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "code": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong in AuthController.register"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Auth user as",
                "operationId": "2a588e5752105246ab7e8a2bf454eb4e",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "string, maxLength=255, uniqueItems=true",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "uniqueItems": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "schema": "User response",
                                            "title": "Sample schema users list",
                                            "properties": {
                                                "userData": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "secondName": {
                                                            "type": "string"
                                                        },
                                                        "patronymic": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "role": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "code": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong in AuthController.register"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Logout user",
                "operationId": "427df7aced3958803e880a4b395b0ba4",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful logout"
                    },
                    "400": {
                        "description": "Something went wrong in AuthController.logout"
                    }
                }
            }
        },
        "/api/forgotPassword": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Sending a link to reset your password",
                "operationId": "2537a4b1bf9304890c7222958dbade6d",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "string, email",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data send success"
                    },
                    "400": {
                        "description": "This email is not registered or the token has already been received at the specified email"
                    }
                }
            }
        },
        "/api/resetPassword": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Set new password",
                "operationId": "332156063b568cbe0edbe98282156226",
                "parameters": [
                    {
                        "name": "password",
                        "in": "path",
                        "description": "string",
                        "required": true
                    },
                    {
                        "name": "resetToken",
                        "in": "path",
                        "description": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated success"
                    },
                    "400": {
                        "description": "This email is not registered or the token is expired"
                    }
                }
            }
        },
        "/api/parented/{parented}/children": {
            "get": {
                "tags": [
                    "CHILDRENS"
                ],
                "summary": "Get list of childrens parent",
                "description": "Returns list of childrens parent",
                "operationId": "getChildrenListForParent",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id родителя, /api/parented/1/children"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "CHILDRENS"
                ],
                "summary": "Adds a new childrn for parent",
                "operationId": "86ade57c607ef1908a64930f89e653ff",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id родителя, /api/parented/1/children",
                        "required": true
                    },
                    {
                        "name": "age",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    },
                    {
                        "name": "parentedId",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in ChildrensController.store"
                    }
                }
            }
        },
        "/api/children/{child}": {
            "get": {
                "tags": [
                    "CHILDRENS"
                ],
                "summary": "Get children",
                "description": "Returns children",
                "operationId": "getChildren",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id ребенка, /api/children/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "CHILDRENS"
                ],
                "summary": "Update children data",
                "operationId": "e76dd33659996a465aa26d4eb5c15cf0",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id ребенка, /api/children/1"
                    },
                    {
                        "name": "age",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    },
                    {
                        "name": "parentedId",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Something went wrong in ChildrensController.update"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CHILDRENS"
                ],
                "summary": "Delete children data",
                "operationId": "99c865fec8c6b1e936c03448fed66888",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id ребенка, /api/children/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Something went wrong in ChildrensController.update"
                    }
                }
            }
        },
        "/api/consultant/{consultant}/reports": {
            "get": {
                "tags": [
                    "CONSULTANT_REPORTS"
                ],
                "summary": "Get list of consultant reports",
                "description": "Returns list of consultant reports",
                "operationId": "storeConsultantReportList",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id консультанта, /api/consultant/1/reports"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "integer, номер страницы пагинаци, /api/consultant/1/reports?page=1"
                    },
                    {
                        "name": "dateBetween",
                        "in": "query",
                        "description": "string, отчеты в указанный промежуток дат, /api/consultant/1/reports?dateBetween=04.10.2023,07.10.2023"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "CONSULTANT_REPORTS"
                ],
                "description": "store consultant reports",
                "operationId": "28ece499583c567075c6057aa26a73b1",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id консультанта, /api/consultant/1/reports"
                    },
                    {
                        "name": "file",
                        "in": "path",
                        "description": "file, type=*.xlsx",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report successfully added"
                    },
                    "400": {
                        "description": "Something went wrong in ConsultantReportController.store"
                    }
                }
            }
        },
        "api/reports/{report}": {
            "get": {
                "tags": [
                    "CONSULTANT_REPORTS"
                ],
                "summary": "Get consultant report",
                "description": "Returns consultant report",
                "operationId": "showConsultantReport",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id отчета, /api/reports/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/reports/{report}": {
            "put": {
                "tags": [
                    "CONSULTANT_REPORTS"
                ],
                "description": "update consultant reports",
                "operationId": "06398031750810f715d76f189bc78670",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id отчета, /api/reports/1"
                    },
                    {
                        "name": "file",
                        "in": "path",
                        "description": "file, type=*.xlsx",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report successfully updated"
                    },
                    "400": {
                        "description": "Something went wrong in ConsultantReportController.update"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CONSULTANT_REPORTS"
                ],
                "summary": "Delete report data",
                "operationId": "8f688dfb062d70b40673e988863560a7",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id отчета, /api/reports/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Something went wrong in ConsultantReportController.update"
                    }
                }
            }
        },
        "/api/consultants": {
            "get": {
                "tags": [
                    "CONSULTANTS"
                ],
                "summary": "Get list of consultants",
                "description": "Returns list of consultants",
                "operationId": "getConsultantsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "integer, номер страницы пагинаци, по 9 записей, /api/consultants?page=1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "CONSULTANTS"
                ],
                "operationId": "storeConsultantsData",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    },
                    {
                        "name": "photo",
                        "in": "path",
                        "description": "file, image:jpg,jpeg,png, maxSize=1MB",
                        "required": true
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "string, max=65535",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in WebinarsController.store"
                    }
                }
            }
        },
        "/api/consultants/{consultant}": {
            "get": {
                "tags": [
                    "CONSULTANTS"
                ],
                "summary": "Get consultant",
                "description": "Returns consultant",
                "operationId": "getConsultant",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id консуьтанта, /api/consultants/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "CONSULTANTS"
                ],
                "operationId": "updateConsultantsData",
                "parameters": [
                    {
                        "name": "photo",
                        "in": "path",
                        "description": "file, image:jpg,jpeg,png, maxSize=1MB"
                    },
                    {
                        "name": "description",
                        "in": "path",
                        "description": "string, max=65535"
                    },
                    {
                        "name": "specializationId",
                        "in": "path",
                        "description": "integer, id специализации"
                    },
                    {
                        "name": "professionId",
                        "in": "path",
                        "description": "integer, id профессии"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Something went wrong in Something went wrong in UserController.update"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CONSULTANTS"
                ],
                "summary": "Delete consultant data",
                "operationId": "644da11460970757f860bac08d1cc9b7",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id консультанта, /api/consultants/1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Something went wrong in ConsultantController.update"
                    }
                }
            }
        },
        "/api/parenteds": {
            "get": {
                "tags": [
                    "PARENTEDS"
                ],
                "summary": "Get list of parenteds",
                "description": "Returns list of parenteds",
                "operationId": "getParentedsList",
                "responses": {
                    "200": {
                        "description": "Array of parenteds with user data"
                    },
                    "400": {
                        "description": "Unauthorized, need roleCode admin"
                    }
                }
            }
        },
        "/api/parenteds/{id}": {
            "get": {
                "tags": [
                    "PARENTEDS"
                ],
                "summary": "Show parented",
                "description": "Returns parented",
                "operationId": "showParented",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id родителя",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of parented"
                    },
                    "400": {
                        "description": "Unauthorized, need Auth user id === parent user id"
                    }
                }
            },
            "put": {
                "tags": [
                    "PARENTEDS"
                ],
                "summary": "Update parented",
                "operationId": "updateParented",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id родителя",
                        "required": true
                    },
                    {
                        "name": "regionId",
                        "in": "path",
                        "description": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "parented successfully updated"
                    },
                    "400": {
                        "description": "Unauthorized, need Auth user id === parent user id"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PARENTEDS"
                ],
                "summary": "Delete parented",
                "operationId": "deleteParenteds",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id родителя",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "parented successfully deleted"
                    },
                    "400": {
                        "description": "Unauthorized need roleCode admin"
                    }
                }
            }
        },
        "/api/professions": {
            "get": {
                "tags": [
                    "PROFESSIONS"
                ],
                "summary": "Get list of professions",
                "description": "Returns list of professions",
                "operationId": "getProfessionList",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "PROFESSIONS"
                ],
                "summary": "Add new profession",
                "description": "Returns profession",
                "operationId": "storeProfession",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/professions/{id}": {
            "get": {
                "tags": [
                    "PROFESSIONS"
                ],
                "summary": "Show profession",
                "description": "Returns profession",
                "operationId": "showProfession",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id профессии",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "PROFESSIONS"
                ],
                "summary": "Update profession",
                "operationId": "updateProfession",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id профессии",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "PROFESSIONS"
                ],
                "summary": "Delete professions",
                "operationId": "deleteProfession",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id профессии",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/regions": {
            "get": {
                "tags": [
                    "REGIONS"
                ],
                "summary": "Get list of regions",
                "description": "Returns list of regions",
                "operationId": "getRegionsList",
                "responses": {
                    "200": {
                        "description": "Array of regions"
                    }
                }
            },
            "post": {
                "tags": [
                    "REGIONS"
                ],
                "summary": "Add new regions",
                "description": "Returns regions",
                "operationId": "storeRegions",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "string, max=255"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region successfully added"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/regions/{id}": {
            "get": {
                "tags": [
                    "REGIONS"
                ],
                "summary": "Show region",
                "description": "Returns region",
                "operationId": "showRegion",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id региона",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of region"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "REGIONS"
                ],
                "summary": "Update region",
                "operationId": "updateRegion",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id региона",
                        "required": true
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "string, max=255"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region successfully updated"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "REGIONS"
                ],
                "summary": "Delete regions",
                "operationId": "deleteRegions",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id региона",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Region successfully deleted"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/specializations": {
            "get": {
                "tags": [
                    "SPECIALIZATIONS"
                ],
                "summary": "Get list of specializations",
                "description": "Returns list of specializations",
                "operationId": "getSpecializationsList",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "SPECIALIZATIONS"
                ],
                "summary": "Add new specializations",
                "description": "Returns list of specializations",
                "operationId": "storeSpecialization",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/specializations/{id}": {
            "get": {
                "tags": [
                    "SPECIALIZATIONS"
                ],
                "summary": "Show specialization",
                "description": "Returns specialization",
                "operationId": "showSpecialization",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id специализации",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "SPECIALIZATIONS"
                ],
                "summary": "Update specialization",
                "operationId": "updateSpecialization",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id специализации",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, max=255",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SPECIALIZATIONS"
                ],
                "summary": "Delete specialization",
                "operationId": "deleteSpecialization",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id специализации",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "USERS"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "schema": "User response",
                                            "title": "Sample schema users list",
                                            "properties": {
                                                "userData": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "secondName": {
                                                            "type": "string"
                                                        },
                                                        "patronymic": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "role": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "code": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Permissions denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "USERS"
                ],
                "summary": "Adds a new user",
                "operationId": "7bbd79520a62d14e957129d2d9745f14",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "second_name",
                                    "patronymic",
                                    "email",
                                    "phone",
                                    "password",
                                    "role_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "second_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "patronymic": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "uniqueItems": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "uniqueItems": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 6
                                    },
                                    "role_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "first_name": "Иван",
                                    "second_name": "Иванов",
                                    "patronymic": "Иванович",
                                    "email": "ivan@gmail.ru",
                                    "phone": "+7 (999) 999 9999",
                                    "password": "834jhvasdf&",
                                    "role_code": "consultant"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "schema": "User response",
                                            "title": "Sample schema users list",
                                            "properties": {
                                                "userData": {
                                                    "properties": {
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "secondName": {
                                                            "type": "string"
                                                        },
                                                        "patronymic": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "role": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "code": {
                                                                    "type": "string"
                                                                },
                                                                "title": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong in UserController.store"
                    }
                }
            }
        },
        "/api/getUserByToken": {
            "get": {
                "tags": [
                    "USERS"
                ],
                "summary": "Get user by token",
                "operationId": "d01dd91e726d657c5cf61a3dbcb82939",
                "parameters": [
                    {
                        "name": "token",
                        "in": "header",
                        "description": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in UserController.getUserByToken"
                    }
                }
            }
        },
        "/api/webinarCategories": {
            "get": {
                "tags": [
                    "WEBINAR_CATEGORIES"
                ],
                "summary": "Get list of webinar categories",
                "description": "Returns list of webinar categories",
                "operationId": "getWebinarCategoriesList",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "WEBINAR_CATEGORIES"
                ],
                "summary": "Adds a new webinar category",
                "operationId": "173de9d57e363236af91c539fe4a0734",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in WebinarCategoriesController.store"
                    }
                }
            }
        },
        "/api/webinarCategories/{id}": {
            "get": {
                "tags": [
                    "WEBINAR_CATEGORIES"
                ],
                "summary": "Get webinar category item",
                "description": "Returns item of webinar categroy",
                "operationId": "getWebinarCategoriesItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "tags": [
                    "WEBINAR_CATEGORIES"
                ],
                "summary": "Adds a new webinar category",
                "operationId": "f6fc89cedee7e25924a943486c01d68b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "integer",
                        "required": true
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in WebinarCategoriesController.store"
                    }
                }
            },
            "delete": {
                "tags": [
                    "WEBINAR_CATEGORIES"
                ],
                "summary": "Delete webinar category",
                "operationId": "ef09c3c64a1a3fa34fe6247228490322",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "The entry cannot be deleted"
                    }
                }
            }
        },
        "/api/webinar/{webinarId}/webinarPartisipants": {
            "get": {
                "tags": [
                    "WEBINAR_PARTISIPANTS"
                ],
                "summary": "Get list of webinarPartisipants",
                "description": "Returns list of webinarPartisipants",
                "operationId": "getWebinarPartisipantsList",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вебинара, /api/webinar/1/webinarPartisipants"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of webinarPartisipants"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "post": {
                "tags": [
                    "WEBINAR_PARTISIPANTS"
                ],
                "summary": "Add new webinarPartisipants",
                "operationId": "storeWebinarPartisipants",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вебинара, /api/webinar/1/webinarPartisipants"
                    },
                    {
                        "name": "webinarId",
                        "in": "path",
                        "description": "integer"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webinarPartisipant successfully added"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/webinarPartisipants/{id}": {
            "delete": {
                "tags": [
                    "WEBINAR_PARTISIPANTS"
                ],
                "summary": "Delete webinarPartisipants",
                "operationId": "deletewebinarPartisipants",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id записи в табице участников вебинара",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webinarPartisipant successfully deleted"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/webinar/{webinarId}/webinarQuestions": {
            "get": {
                "tags": [
                    "WEBINAR_QUESTIONS"
                ],
                "summary": "Get list of webinarQuestions",
                "description": "Returns list of webinarQuestions",
                "operationId": "getWebinarQuestionsList",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вебинара, /api/webinar/1/webinarQuestions"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of webinarQuestions"
                    }
                }
            },
            "post": {
                "tags": [
                    "WEBINAR_QUESTIONS"
                ],
                "summary": "Add new webinarQuestions",
                "operationId": "storeWebinarQuestions",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вебинара, /api/webinar/1/webinarQuestions"
                    },
                    {
                        "name": "questionText",
                        "in": "path",
                        "description": "string, max=255"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webinarQuestion successfully added"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/webinarQuestions/{id}": {
            "get": {
                "tags": [
                    "WEBINAR_QUESTIONS"
                ],
                "summary": "Show webinarQuestion",
                "description": "Returns webinarQuestion",
                "operationId": "showWebinarQuestion",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вопроса вебинара",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of webinarQuestion"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "put": {
                "tags": [
                    "WEBINAR_QUESTIONS"
                ],
                "summary": "Update webinarQuestion",
                "operationId": "updateWebinarQuestion",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вопроса к вебинару",
                        "required": true
                    },
                    {
                        "name": "questionText",
                        "in": "path",
                        "description": "string, max=255"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webinarQuestion successfully updated"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "WEBINAR_QUESTIONS"
                ],
                "summary": "Delete webinarQuestions",
                "operationId": "deletewebinarQuestions",
                "parameters": [
                    {
                        "name": "",
                        "in": "query",
                        "description": "integer, id вопроса к вебинару",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webinarQuestion successfully deleted"
                    },
                    "400": {
                        "description": "Permissions denied"
                    }
                }
            }
        },
        "/api/webinars": {
            "get": {
                "tags": [
                    "WEBINARS"
                ],
                "summary": "Get list of webinars",
                "description": "Returns list of webinars",
                "operationId": "getWebinarsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "integer, номер страницы пагинаци, /api/webinars?page=1"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "integer, webinarCategoryId (from /api/webinarCategories), /api/webinars?category=1, "
                    },
                    {
                        "name": "actual",
                        "in": "query",
                        "description": "string, Предстоящие, текущие или архивные вебинары, /api/webinars?actual=yes или /api/webinars?actual=no"
                    },
                    {
                        "name": "dateBetween",
                        "in": "query",
                        "description": "string, Вебинары в указанный промежуток дат, /api/webinars?dateBetween=04.10.2023,07.10.2023"
                    },
                    {
                        "name": "lector",
                        "in": "query",
                        "description": "string, Вебинары выбранные из выпадающего списка лекторов, /api/webinars?lector=Иванов И.И."
                    },
                    {
                        "name": "searchField",
                        "in": "query",
                        "description": "string, Поиск по полю названия вебинара, /api/webinars?searchField=дошкольник"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "WEBINARS"
                ],
                "summary": "Adds a new webinar",
                "operationId": "b8295e9697f7a93a7e913ca2d03e2c80",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, maxLength=255",
                        "required": true
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "string",
                        "required": true
                    },
                    {
                        "name": "timeStart",
                        "in": "path",
                        "description": "string"
                    },
                    {
                        "name": "timeEnd",
                        "in": "path",
                        "description": "string"
                    },
                    {
                        "name": "lectorName",
                        "in": "path",
                        "description": "string, maxLength=255"
                    },
                    {
                        "name": "logo",
                        "in": "path",
                        "description": "image:jpg,jpeg,png, maxSize=1MB"
                    },
                    {
                        "name": "cost",
                        "in": "path",
                        "description": "integer"
                    },
                    {
                        "name": "videoLink",
                        "in": "path",
                        "description": "string, maxLength=255"
                    },
                    {
                        "name": "webinarCategoryId",
                        "in": "path",
                        "description": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in WebinarsController.store"
                    },
                    "200": {
                        "description": "Data webinar successfully added"
                    }
                }
            }
        },
        "/api/webinars/{id}": {
            "get": {
                "tags": [
                    "WEBINARS"
                ],
                "summary": "Get list of webinars",
                "description": "Returns list of webinars",
                "operationId": "getWebinarItem",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "WEBINARS"
                ],
                "summary": "Update webinar",
                "operationId": "ad5639d51fb640e8465c0d3a80ad024e",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "string, maxLength=255"
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "string"
                    },
                    {
                        "name": "timeStart",
                        "in": "path",
                        "description": "string"
                    },
                    {
                        "name": "timeEnd",
                        "in": "path",
                        "description": "string"
                    },
                    {
                        "name": "lectorName",
                        "in": "path",
                        "description": "string, maxLength=255"
                    },
                    {
                        "name": "logo",
                        "in": "path",
                        "description": "image:jpg,jpeg,png, maxSize=1MB"
                    },
                    {
                        "name": "cost",
                        "in": "path",
                        "description": "integer"
                    },
                    {
                        "name": "videoLink",
                        "in": "path",
                        "description": "string, maxLength=255"
                    },
                    {
                        "name": "webinarCategoryId",
                        "in": "path",
                        "description": "integer"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Something went wrong in WebinarsController.update"
                    },
                    "200": {
                        "description": "Data webinar successfully update"
                    }
                }
            }
        },
        "/api/webinarLectors": {
            "get": {
                "tags": [
                    "WEBINARS"
                ],
                "summary": "Получение массива лекторов для выпадающего списка фильтрации",
                "description": "Получение массива лекторов для выпадающего списка фильтрации",
                "operationId": "getWebinarLectors",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Permissions denied"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    }
}